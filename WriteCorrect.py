# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded through https://t.me/hikkamods_bot
# ( o.o )  üîì Not licensed.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name: WriteCorrect
# Description: –ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ª–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
# Author: Yahikoro
# Commands:
# .err
# ---------------------------------------------------------------------------------


from asyncio.exceptions import TimeoutError

from telethon import events
from telethon.errors.rpcerrorlist import YouBlockedUserError

from .. import loader, utils


def register(cb):
    cb(ErrorMod())


class ErrorMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ª–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫"""

    strings = {"name": "–ü–∏—à–∏ –≥—Ä–∞–º–æ—Ç–Ω–æ"}

    async def errcmd(self, message):
        """–ü–∏—à–∏ .err + —Å–ª–æ–≤–æ, –º–æ–∂–Ω–æ —Ä–µ–ø–ª–∞–π."""
        try:
            text = utils.get_args_raw(message)
            reply = await message.get_reply_message()
            chat = "@SpellingMasterBot"
            if not text and not reply:
                await message.edit("<b>–ê –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫—Ç–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –±—É–¥–µ—Ç</b>")
                return
            if text:
                await message.edit("<b>—É–Ω—É –º–æ–º–µ–Ω—Ç–æ</b>")
                async with message.client.conversation(chat) as conv:
                    try:
                        response = conv.wait_event(
                            events.NewMessage(incoming=True, from_users=1037534015)
                        )
                        await message.client.send_message(chat, text)
                        response = await response
                    except YouBlockedUserError:
                        await message.reply("<b>–£–¥–∞–ª–∏ –∏–∑ –ß–°: @SpellingMasterBot</b>")
                        return
                    if not response.text:
                        await message.edit("<–ï—â—ë —Ä–∞–∑ –ø—Ä–æ–±—É–π</b>")
                        return
                    await message.delete()
                    await message.client.send_message(message.to_id, response.text)
            if reply:
                await message.edit("<b>–°–µ–∫—É–Ω–¥–æ—á–∫—É</b>")
                async with message.client.conversation(chat) as conv:
                    try:
                        response = conv.wait_event(
                            events.NewMessage(incoming=True, from_users=1037534015)
                        )
                        await message.client.send_message(chat, reply)
                        response = await response
                    except YouBlockedUserError:
                        await message.reply("<b>–£–¥–∞–ª–∏ –∏–∑ –ß–°: @SpellingMasterBot</b>")
                        return
                    if not response.text:
                        await message.edit("<–ü—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ </b>")
                        return
                    await message.delete()
                    await message.client.send_message(message.to_id, response.text)
        except TimeoutError:
            return await message.edit("<b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞</b>")
