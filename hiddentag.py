# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded through https://t.me/hikkamods_bot
# ( o.o )  üîì Not licensed.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name: hiddentag
# Description: –°–∫—Ä—ã—Ç–Ω–æ —Ç–µ–≥–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
# Author: Fl1yd
# Commands:
# .tag
# ---------------------------------------------------------------------------------


from telethon.tl.functions.users import GetFullUserRequest

from .. import loader, utils


def register(cb):
    cb(HiddenTagMod())


class HiddenTagMod(loader.Module):
    """–°–∫—Ä—ã—Ç–Ω–æ —Ç–µ–≥–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    strings = {"name": "HiddenTag"}

    async def tagcmd(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .tag <@> <—Ç–µ–∫—Å—Ç (–ø–æ –∂–µ–ª–∞–Ω–∏—é)>."""
        args = utils.get_args_raw(message).split(" ")
        reply = await message.get_reply_message()
        user = None
        tag = None
        try:
            if len(args) == 1:
                args = utils.get_args_raw(message)
                if args.isnumeric():
                    user = int(args)
                    user = await message.client.get_entity(user)
                else:
                    user = await message.client.get_entity(args)
                tag = "–≥–æ–≤–Ω–æ –∑–∞–ª—É–ø–Ω–æ–µ\n                –ø–∞—à–µ—Ç."
            elif len(args) >= 2:
                if args[0].isnumeric():
                    user = int(args[0])
                    user = await message.client.get_entity(user)
                else:
                    user = await message.client.get_entity(args[0])
                tag = utils.get_args_raw(message).split(" ", 1)[1]
        except:
            return await message.edit("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        await message.delete()
        user = await message.client(GetFullUserRequest(user.id))
        await message.client.send_message(
            message.to_id,
            f'{tag} <a href="tg://user?id={user.user.id}">\u2060</a>',
            reply_to=reply.id if reply else None,
        )
