# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded through https://t.me/hikkamods_bot
# ( o.o )  üîê Licensed under the GNU AGPLv3.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name: nometa
# Author: hikariatama
# Commands:
# .nometa | .watcher
# ---------------------------------------------------------------------------------

#             ‚ñà ‚ñà ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà ‚ñÄ
#             ‚ñà‚ñÄ‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ ‚ñà
#              ¬© Copyright 2022
#           https://t.me/hikariatama
#
# üîí      Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html


# meta pic: https://static.dan.tatar/nometa_icon.png
# meta banner: https://mods.hikariatama.ru/badges/nometa.jpg
# meta developer: @hikarimods
# scope: hikka_only
# scope: hikka_min 1.3.0

from telethon.tl.types import Message

from .. import loader, utils


@loader.tds
class NoMetaMod(loader.Module):
    """Warns people about Meta messages"""

    strings = {
        "name": "NoMeta",
        "no_meta": (
            "<b>üëæ <u>Please!</u></b>\n<b>NoMeta</b> aka <i>'Hello', 'Hi' etc.</i>\nAsk"
            " <b>directly</b>, what do you want from me."
        ),
        "no_meta_ru": (
            "<b>üëæ <u>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞!</u></b>\n<b>–ù–µ –Ω—É–∂–Ω–æ –ª–∏—à–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π</b> –ø–æ —Ç–∏–ø—É"
            " <i>'–ü—Ä–∏–≤–µ—Ç', '–•–∞–π' –∏ –¥—Ä.</i>\n–°–ø—Ä–∞—à–∏–≤–∞–π(-—Ç–µ) <b>–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ</b>, —á—Ç–æ –æ—Ç"
            " –º–µ–Ω—è –Ω—É–∂–Ω–æ."
        ),
    }

    @loader.command(ru_doc="–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –æ –º–µ—Ç–µ")
    @loader.unrestricted
    async def nometacmd(self, message: Message):
        """Show message about NoMeta"""
        await self._client.send_message(
            message.peer_id,
            self.strings("no_meta"),
            reply_to=getattr(message, "reply_to_msg_id", None),
        )
        if message.out:
            await message.delete()

    @loader.tag("only_messages", "only_pm", "in")
    async def watcher(self, message: Message):
        meta = ["hi", "hello", "hey there", "konichiwa", "hey"]

        meta_ru = [
            "–ø—Ä–∏–≤–µ—Ç",
            "—Ö–∞–π",
            "—Ö–µ–ª–ª–æ",
            "—Ö–µ–ª–ª–æ—É",
            "—Ö—ç–ª–ª–æ—É",
            "–∫–æ–Ω–∏—á–∏–≤–∞",
            "–∞–ª–æ—Ö–∞",
            "—Å–ª—É—à–∞–π",
            "–æ",
            "—Å–ª—É—à",
            "–º?",
            "–∞?",
            "—Ö–µ–π",
            "—Ö—ç–π",
            "–π–æ",
            "–π–æ—É",
            "–ø—Ä–∏–≤",
            "yo",
            "–∫—É",
        ]

        if message.raw_text.lower() in meta:
            await utils.answer(message, self.strings("no_meta"))
            await self._client.send_read_acknowledge(
                message.chat_id,
                clear_mentions=True,
            )

        if message.raw_text.lower() in meta_ru:
            await utils.answer(message, self.strings("no_meta_ru"))
            await self._client.send_read_acknowledge(
                message.chat_id, clear_mentions=True
            )
